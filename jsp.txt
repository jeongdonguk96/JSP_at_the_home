get방식
  데이터를 요청할 때 body에 두지 않고 쿼리스트링을 통해 요청.
  url 끝에 ?와 함께 이름과 값으로 쌍을 이루는 파라미터. (?name=value)

post방식
  데이터를 요청할 때 http메세지의 body에 담아서 요청.
  길이 제한이 없고 눈에 보이지 않아 보안 면에서 더 낫지만
  요청 내용을 확인할 수 있기 때문에 반드시 암호화가 필요.
  요청 헤더의 content-type에 데이터의 타입을 표시해야 함.
  만약 하지 않으면 서버가 유추해서 처리.

서블릿 필터
  웹서버 - WAS(톰캣이 그 중에 하나) - Servlet이 데이터 요청/응답의 객체들.
  Servlet에 정보가 전달될 때, 언어가 어떤 것인지 모름.
  그래서 일괄적으로 프로그램의 언어를 UTF-8로 바꾸는 방법이 있지만
  서버 프로그램의 설정을 바꾸는 것은 최대한 지양됨.
  그래서 WAS와 Servlet 사이에 필터를 생성해 그 필터에서 UTF-8을 거침.
  뿐만 아니라 더 많은 권한을 부여해 다른 기능도 수행 가능.
  요청과 응답 둘 다에 관여할 수 있음.

1. 클래스나 매서드가 static이 아닌데도 객체생성없이
   바로 사용 가능 한 것은 톰캣에 객체를 생성해주는 기능이 있기 때문.
   웬만하면 인스턴스 매서드를 사용하는데 그 이유는
   static 매서드는 cv만 사용할 수 있지만
   인스턴스 매서드는 iv와 cv 둘 다 사용 가능하기 때문.

2. 매서드의 접근제어자가 private여도 문제 없이 출력되는데
   @RequestMapping이 URL과 매서드를 연결시켜 주기 때문
   즉, 외부에서도 호출 가능하게 해주는 어노테이션.
   하지만, 클래스 파일에서는 여전히 private의 기능을 함.

JSP는 html안에 java를 넣는 것

